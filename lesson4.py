# 1) У вас есть список my_list с значениями типа int.
# Распечатать те значения, которые больше 100.
# Задание выполнить с помощью цикла for.
my_list = [12, 23, 234, 656, 7876, 23, 2345]
for _ in my_list:
    if _ > 100:
        print(_)
######################################################
# 2) У вас есть список my_list с значениями типа int, и пустой список my_results.
# Добавить в my_results те значения, которые больше 100.
# Распечатать список my_results.
# Задание выполнить с помощью цикла for.
my_list = [12, 23, 234, 656, 7876, 23, 2345]
my_results = []
for _ in my_list:
    if _ > 100:
        my_results.append(_)
print(my_results)
######################################################
# 3) У вас есть список my_list с значениями типа int.
# Если в my_list количество элементов меньше 2, то в конец добавить значение 0.
# Если количество элементов больше или равно 2, то добавить сумму последних двух элементов.
# Количество элементов в списке можно получить с помощью функции len(my_list)
my_list = [12, 20, 15]
if len(my_list) < 2:
    my_list.append(0)
else:
    my_list.append(my_list[-1] + my_list[-2])
print(my_list)
######################################################
# 4) Пользователь вводит value - число с запятой (например 3.14) с клавиатуры.
# Вы приводите это value к типу float и выводите результат выражения value ** -1.
# Написать программу, которая вычисляет данное выражение и
# корректно обрабатывает возможные исключения.
value = input()
try:
    value = float(value)
    value **= -1
    print(value)
except ZeroDivisionError:
    print('На ноль делить нельзя!')
except ValueError:
    print('К вводу доступны только числа!')
######################################################
# 5) У вас есть список значений my_list и список индексов my_indexes
# (начинается с нуля и количество элементов совпадает с количеством в my_list.
# Распечатать значения из my_list через обращение по индексу. См. пример выше.
my_list = [12, 32, 45, 'fds', 65, '1!']
my_index = list(range(len(my_list)))
for index in my_index:
    print(my_list[index])
######################################################
# 6) У вас есть два списка my_list_1 и my_list_2 равной длинны и
# список индексов my_indexes (начинается с нуля и количество элементов
# совпадает с количеством в my_list_1.
# Распечатать пары значений из my_list_1 и my_list_2 через обращение по индексу.
my_list_1 = [12, 32, 45, 'fds', 65, '1!']
my_list_2 = [43, '11', '23+', 43, 8, 21]
my_index = list(range(len(my_list)))
for index in my_index:
    print(f'{my_list_1[index], my_list_2[index]}')
######################################################
# 7) У вас есть строка my_string = '0123456789'.
# Сгенерировать целые числа (тип int) от 0 до 99 и поместить их в список.
# Задание нужно выполнить ТОЛЬКО через цикл в цикле(См. пример выше) и приведение типов .
# Генерирование через range или другие "фишки" я засчитывать не буду ))
my_string = '0123456789'
my_value = []
for symb1 in my_string:
    for symb2 in my_string:
        my_value.append(int(symb1 + symb2))
print(my_value)
